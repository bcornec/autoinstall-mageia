- name: Load variables generated at install time
  ansible.builtin.include_vars: "{{ MGAANSIBLEDIR }}/mga.yml"

- name: Ensure correct nproc soft limits
  become: true
  become_user: root
  community.general.pam_limits:
    domain: "{{ MGAUSER }}"
    limit_type: soft
    limit_item: nproc
    value: "800000"

- name: Ensure correct nproc hard limits
  become: true
  become_user: root
  community.general.pam_limits:
    domain: "{{ MGAUSER }}"
    limit_type: hard
    limit_item: nproc
    value: "800000"

- name: Ensure correct nofile soft limits
  become: true
  become_user: root
  community.general.pam_limits:
    domain: "{{ MGAUSER }}"
    limit_type: soft
    limit_item: nofile
    value: "65535"

- name: Ensure correct nofile hard limits
  become: true
  become_user: root
  community.general.pam_limits:
    domain: "{{ MGAUSER }}"
    limit_type: hard
    limit_item: nofile
    value: "65535"

- name: Setup sysctl params
  become: true
  become_user: root
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: true
    sysctl_set: true
  with_items:
    - { key: "net.ipv4.tcp_keepalive_time", value: "1800" }
    - { key: "kernel.threads-max", value: "4096000" }
    - { key: "kernel.pid_max", value: "200000" }
    - { key: "vm.max_map_count", value: "600000" }

- name: Ensure limits are correct for "{{ MGAUSER }}" account
  lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: "{{ item }}"
  with_items:
    - "ulimit -u 641465"
    - "ulimit -n 65535"

- name: Copy the skeleton content under /etc/skel
  become: true
  become_user: root
  ansible.posix.synchronize:
    dest: /etc/skel/
    src: '{{ MGAREPODIR }}/skel/'

- name: Test .profile file
  ansible.builtin.command: ls "{{ ansible_env.HOME }}/.profile"
  register: profile_path
  failed_when: false
  changed_when: false

- name: Ensure we have a .profile file
  ansible.builtin.copy:
    src: /etc/skel/.bash_profile
    dest: "{{ ansible_env.HOME }}/.profile"
  when:
    - profile_path.rc != 0

- name: Ensure vim is the default EDITOR
  lineinfile:
    path: "{{ ansible_env.HOME }}/.profile"
    line: export EDITOR=vim

- name: Setup logind.conf
  become: true
  become_user: root
  lineinfile:
    path: /etc/systemd/logind.conf
    line: UserTasksMax=100000
    state: present

- name: "Generate shorewall rules"
  become: true
  become_user: root
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/shorewall/{{ item | basename }}"
    owner: "{{ MGAUSER }}"
    group: "{{ MGAUSER }}"
    mode: 0640
    backup: yes
  with_fileglob: [ '{{ MGAANSIBLEDIR }}/templates/shorewall/*' ]
  notify:
    - restart shorewall

- name: Enable base services
  become: true
  become_user: root
  ansible.builtin.systemd:
    state: started
    daemon_reload: true
    enabled: true
    name: "{{ item.1 }}"
  with_subelements: 
  - "{{ nodes }}"
  - svcs
  when: item.0.name == "system"

