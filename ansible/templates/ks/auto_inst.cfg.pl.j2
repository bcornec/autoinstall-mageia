#!/usr/bin/perl -cw
#
# $Id$
#
# 
# You should check the syntax of this file before using it in an auto-install.
# You can do this with 'perl -cw auto_inst.cfg.pl' or by executing this file
# (note the '#!/usr/bin/perl -cw' on the first line).
#
# !!!! AT INSTALL THIS IS ON INTERNAL LAN 192.168 !!!!
#
$o = {
        'timezone' => {
                'ntp' => 'fr.pool.ntp.org',
                'timezone' => 'Europe/Paris',
                'UTC' => 1
        },
        'services' => [
                'network',
                'network-up',
                'numlock',
                'sshd',
        ],
        'security_user' => 'sysadmin-discuss@ml.mageia.org',
        'default_packages' => [
                'urpmi',
                'git',
                'kernel-server-latest',
                'openssh-server',
                'openssh-clients',
                'python3',
                'shorewall',
                'sudo',
                'vim-minimal',
                'wget',
                'xz',
        ],
        'users' => [
                {
                        'icon' => 'default',
                        'realname' => '{{ MGAADMININS }}',
                        'uid' => undef,
                        'groups' => [],
                        'name' => '{{ MGAADMININS }}',
                        'shell' => '/bin/bash',
                        'gid' => undef,
                        # linux1
                        'pw' => '{{ MGAADMINPWD }}',
                }
        ],
        'locale' => {
                'country' => 'FR',
                'IM' => undef,
                'lang' => 'fr',
                'langs' => {
                        'fr' => 1
                },
                'utf8' => 1
        },
        'net' => {
                'zeroconf' => {},
                'network' => {
                        'NETWORKING' => 'yes',
                        'GATEWAY' => '{{ MGAGW }}',
                        'CRDA_DOMAIN' => 'FR',
                        'FORWARD_IPV4' => 'false'
                },
                'autodetect' => {},
                'network::connection::ethernet' => {},
                'resolv' => {
                        'DOMAINNAME' => 'nameserver',
                        'dnsServer' => '{{ MGADNS1 }}',
                        'DOMAINNAME2' => 'search',
                        'dnsServer2' => '{{ MGADNS2 }}',
                },
                'wireless' => {},
                'ifcfg' => {
                        '{{ item.ifcfg }}' => {
                                'BROADCAST' => '',
                                'isUp' => 1,
                                'BOOTPROTO' => 'dhcp',
                                'isPtp' => '',
                                'NETWORK' => '',
                                'HWADDR' => undef,
                                'DEVICE' => '{{ item.ifcfg }}',
                                'METRIC' => 10
                        }
                },
                'net_interface' => '{{ item.ifcfg }}',
                'type' => 'network::connection::ethernet',
                'PROFILE' => 'default'
        },
        'authentication' => {
                'shadow' => 1,
                'blowfish' => 1
        },
        'partitions' => [
# By default look under MGAANSIBLEDIR/templates
{% include "ks/part_" + item.name + ".pl" %}
        ],
        'partitioning' => {
                        'auto_allocate' => 1,
                        'clearall' => 1,
                        'clear' => [ 'sda', 'sdb' ],
        },
        'superuser' => {
                'pw' => '{{ MGAADMINPWD }}',
                'realname' => 'root',
                'uid' => '0',
                'shell' => '/bin/bash',
                'home' => '/root',
                'gid' => '0'
         },
        'security' => 'secure',
        'mouse' => {
                'EmulateWheel' => undef,
                'synaptics' => undef,
                'name' => 'Any PS/2 & USB mice',
                'device' => 'input/mice',
                'evdev_mice' => [
                                 {
                                'device' => '/dev/input/by-id/usb--event-mouse',
                                'HWheelRelativeAxisButtons' => '7 6'
                                 }
                                ],
                'evdev_mice_all' => [
                                  {
                                'device' => '/dev/input/by-id/usb--event-mouse',
                                'HWheelRelativeAxisButtons' => '7 6'
                                  }
                                ],
                'type' => 'Universal',
                'nbuttons' => 7,
                'Protocol' => 'ExplorerPS/2',
                'wacom' => [],
                'MOUSETYPE' => 'ps/2'
        },
        'interactiveSteps' => [
                #'doPartitionDisks',
        ],
        'autoExitInstall' => '1',
        'no_recommends' => 1,
        'mkbootdisk' => 0,
        'isUpgrade' => 0,
        'excludedocs' => 0,
        'miscellaneous' => {
                'numlock' => 1,
        },
        'keyboard' => {
                'GRP_TOGGLE' => '',
                'KEYBOARD' => 'us'
        },
        'enabled_media' => [
           'Core Release',
           'Core Updates',
        ],
        # does not work if you want to not install X
        'X' => {
                'disabled' => 1 
        },
        # Works could be used for X11 removal but ...
        'skipped_packages' => [
                '/^kernel-desktop-/',
        ],
        'rpmsrate_flags_chosen' => {
                CAT_X => 0,
        },
        'postInstall' => '
        # Setup sudo for {{ MGAADMININS }}
        echo "Defaults:{{ MGAADMININS }} !fqdn" > /etc/sudoers.d/{{ MGAADMININS }}
        echo "Defaults:{{ MGAADMININS }} !requiretty" >> /etc/sudoers.d/{{ MGAADMININS }}
        echo "{{ MGAADMININS }} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/{{ MGAADMININS }}
        # Get the systemd conf file for reboot
        wget http://{{ MGADPLOYIP }}/ks/autoinstall-mageia.service -O /etc/systemd/system/autoinstall-mageia.service
        chmod 644 /etc/systemd/system/autoinstall-mageia.service
        # At first boot finish install - disabled at end of install script
        systemctl enable autoinstall-mageia
        # Get the hostname to deploy
        MGAMACHINETYPE={{ item.name }}
        MGAMACHINEITF={{ item.ifcfg }}
        MGAMACHINEMAC=`ip a show dev $MGAMACHINEITF | grep link/ | awk \'{ print $2 }\'`
{% for machine in item.nodenames -%}
        if [ _"{{ machine.mac }}" = _"$MGAMACHINEMAC" ]; then
            MGAMACHINENAME={{ machine.name }}
            MGAMACHINEIP={{ machine.ip }}
        fi
{% endfor -%}
        # Create an environment file to store these varaibles used by systemd process
        env | grep MGAMACHINE > /etc/autoinstall-mageia.sh
        chmod 644 /etc/autoinstall-mageia.sh
        ',
        };
